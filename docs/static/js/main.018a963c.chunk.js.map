{"version":3,"sources":["services/getDataFromApi.js","images/logo.png","components/Header.js","components/Filters.js","components/CharacterCard.js","images/logoverde.png","components/CharacterList.js","components/CharacterDetail.js","images/404.png","components/Footer.js","components/App.js","index.js"],"names":["getDataFromApi","fetch","then","response","json","data","results","map","character","id","image","name","specie","species","planet","origin","episodes","episode","status","type","Header","className","src","logo","alt","Filters","props","onSubmit","ev","preventDefault","htmlFor","value","filterName","onChange","handleFilter","target","CharacterCard","to","CharacterList","characters","length","title","characterElement","CharacterDetail","Footer","App","useState","setCharacters","setFilterName","useEffect","filteredCharacters","filter","toLowerCase","includes","exact","path","render","routeCharacterId","parseInt","match","params","characterId","foundCharacter","find","nofound","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.018a963c.chunk.js","sourcesContent":["const getDataFromApi = () => {\r\n  return fetch('https://rickandmortyapi.com/api/character/')\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      // console.log(data.results);\r\n\r\n      return data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          image: character.image,\r\n          name: character.name,\r\n          specie: character.species,\r\n          planet: character.origin.name,\r\n          episodes: character.episode,\r\n          status: character.status,\r\n          type: character.type,\r\n        };\r\n      });\r\n    });\r\n};\r\nexport default getDataFromApi;\r\n","export default __webpack_public_path__ + \"static/media/logo.de13d484.png\";","import React from 'react';\r\nimport logo from '../images/logo.png';\r\nimport '../stylesheet/App.scss';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"logo\" src={logo} alt=\"Rick and Morty logo\" />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport '../stylesheet/App.scss';\r\n\r\nconst Filters = (props) => {\r\n  const handleFilter = (ev) => {\r\n    props.handleFilter(ev.target.value);\r\n  };\r\n  const handleFormSubmit = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <label className=\"label\" htmlFor=\"name\">\r\n        Busca un personaje:\r\n      </label>\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        id=\"name\"\r\n        value={props.filterName}\r\n        onChange={handleFilter}\r\n      />\r\n    </form>\r\n  );\r\n};\r\nexport default Filters;\r\n","import React from 'react';\r\nimport '../stylesheet/CharacterCard.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction CharacterCard(props) {\r\n  return (\r\n    <li className=\"card\">\r\n      <Link className=\"link\" to={`/character-detail/${props.character.id}`}>\r\n        <img\r\n          className=\"card--img\"\r\n          src={props.character.image}\r\n          alt={`Imagen de ${props.character.name}`}\r\n        />\r\n        <h3 className=\"card--title\">{props.character.name}</h3>\r\n        <p className=\"card--description\">{props.character.specie}</p>\r\n      </Link>\r\n    </li>\r\n  );\r\n}\r\nCharacterCard.propTypes = {\r\n  id: PropTypes.number,\r\n  name: PropTypes.string,\r\n  specie: PropTypes.string,\r\n  image: PropTypes.string,\r\n};\r\n\r\nexport default CharacterCard;\r\n","export default __webpack_public_path__ + \"static/media/logoverde.c2e5c52f.png\";","import React from 'react';\r\nimport CharacterCard from './CharacterCard.js';\r\nimport PropTypes from 'prop-types';\r\nimport image from '../images/logoverde.png';\r\nimport '../stylesheet/CharacterList.scss';\r\n\r\nconst CharacterList = (props) => {\r\n  if (props.characters.length === 0) {\r\n    return (\r\n      <div>\r\n        <p className=\"no-results\">No se encuentran resultados</p>\r\n        <img\r\n          className=\"no-results__img\"\r\n          src={image}\r\n          alt=\"No hay resultados\"\r\n          title=\"No hay resultados\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  const characterElement = props.characters.map((character) => {\r\n    return (\r\n      <CharacterCard\r\n        key={character.id}\r\n        character={character}\r\n        name={character.name}\r\n        species={character.species}\r\n        image={character.image}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"list-container\">\r\n      <ul className=\"list-container__cards\">{characterElement}</ul>\r\n    </div>\r\n  );\r\n};\r\nCharacterList.propTypes = {\r\n  characters: PropTypes.array,\r\n};\r\nexport default CharacterList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../stylesheet/CharacterDetail.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CharacterDetail = (props) => {\r\n  return (\r\n    <div className=\"character-detail\" key={props.id}>\r\n      <div className=\"character-detail__btncontainer\">\r\n        <Link to=\"/\">\r\n          <button className=\"character-detail__btn\">Volver</button>\r\n        </Link>\r\n      </div>\r\n      <div className=\"character-detail__imgcontainer\">\r\n        <img\r\n          className=\"character-detail__imgcontainer--img\"\r\n          src={props.image}\r\n          alt={props.name}\r\n          title={`Imagen de ${props.name}`}\r\n        />\r\n        <div className=\"character-detail__container\">\r\n          <h2 className=\"detail__name\">{props.name}</h2>\r\n          <ul className=\"detail__description\">\r\n            <li>Especie: {props.species}.</li>\r\n            <li>Planeta de origen: {props.origin}.</li>\r\n            <li>Aparece en: {props.episodes} episodios.</li>\r\n            <li>Estatus: {props.status}.</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nCharacterDetail.propTypes = {\r\n  id: PropTypes.number,\r\n  name: PropTypes.string,\r\n  image: PropTypes.string,\r\n  species: PropTypes.string,\r\n  status: PropTypes.string,\r\n  origin: PropTypes.string,\r\n  episodes: PropTypes.number,\r\n};\r\n\r\nexport default CharacterDetail;\r\n","export default __webpack_public_path__ + \"static/media/404.47a8e1f6.png\";","import React from 'react';\r\nimport '../stylesheet/App.scss';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <header className=\"footer\">\r\n      <p>\r\n        Made with ðŸ’™ by Nuria D. <br />\r\n        Adalab #PromoKizzy 2020\r\n      </p>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport '../stylesheet/App.scss';\nimport getDataFromApi from '../services/getDataFromApi';\nimport Header from './Header';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport CharacterDetail from './CharacterDetail';\nimport nofound from '../images/404.png';\nimport PropTypes from 'prop-types';\nimport Footer from './Footer';\n\nconst App = () => {\n  //Estados\n  const [characters, setCharacters] = useState([]);\n  const [filterName, setFilterName] = useState('');\n\n  //Gestionar API\n  useEffect(() => {\n    getDataFromApi().then((data) => {\n      setCharacters(data);\n    });\n  }, []);\n\n  //Manejadora del input\n  const handleFilter = (filterName) => {\n    setFilterName(filterName);\n  };\n\n  //Filtro personajes\n  const filteredCharacters = characters.filter((character) => {\n    return character.name.toLowerCase().includes(filterName.toLowerCase());\n  });\n\n//Buscar personajes\n  const renderCharacter = (props) => {\n    const routeCharacterId = parseInt(props.match.params.characterId);\n    const foundCharacter = characters.find((character) => {\n      return routeCharacterId === character.id;\n    });\n\n    if (foundCharacter) {\n      return (\n        <CharacterDetail\n          image={foundCharacter.image}\n          name={foundCharacter.name}\n          status={foundCharacter.status}\n          species={foundCharacter.specie}\n          origin={foundCharacter.planet}\n          episodes={foundCharacter.episodes.length}\n        ></CharacterDetail>\n      );\n    } else {\n      return (\n        <div className=\"nofound\">\n          <h2>El personaje que buscas no existe</h2>\n          <img className=\"imgnofound\" src={nofound} alt=\"no found\" />\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Filters handleFilter={handleFilter} filterName={filterName} />\n          <CharacterList characters={filteredCharacters} />\n        </Route>\n        <Route path=\"/character-detail/:characterId\" render={renderCharacter}></Route>\n      </Switch>\n      <Footer />\n    </div>\n  );\n};\n\nApp.propTypes = {\n  filteredCharacters: PropTypes.array,\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './stylesheet/index.scss';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}