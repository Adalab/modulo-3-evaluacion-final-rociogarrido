{"version":3,"sources":["services/getDataFromApi.js","components/App.js","index.js"],"names":["getDataFromApi","fetch","then","response","json","data","results","map","character","id","image","name","specie","species","planet","origin","episodes","episode","status","type","App","useState","setCharacters","useEffect","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAuBeA,G,MAvBQ,WAErB,OAAOC,MAAM,8CACVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEL,OAAOA,EAAKC,QAAQC,KAAI,SAACC,GAGvB,MAAO,CACLC,GAAID,EAAUC,GACdC,MAAOF,EAAUE,MACjBC,KAAMH,EAAUG,KAChBC,OAAQJ,EAAUK,QAClBC,OAAQN,EAAUO,OAAOJ,KACzBK,SAAUR,EAAUS,QACpBC,OAAQV,EAAUU,OAClBC,KAAMX,EAAUW,c,OCGXC,EAhBH,WAEV,MAAoCC,mBAAS,IAA7C,mBAAmBC,GAAnB,WACA,EAAoCD,mBAAS,IAA7C,6BAUA,OAPAE,qBAAU,WAERvB,IAAiBE,MAAK,SAACG,GACrBiB,EAAcjB,QAEf,IAEI,qBAAKmB,UAAU,MAAf,0BCZTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.5133bd1c.chunk.js","sourcesContent":["const getDataFromApi = () => {\r\n  // hacemos la llamada al servidor y retornamos la promesa\r\n  return fetch(\"https://rickandmortyapi.com/api/character/\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      // console.log(data.results);\r\n      return data.results.map((character) => {\r\n        // console.log(character);\r\n        // los datos que quiero sacar de todos los que hay en la API\r\n        return {\r\n          id: character.id,\r\n          image: character.image,\r\n          name: character.name,\r\n          specie: character.species,\r\n          planet: character.origin.name,\r\n          episodes: character.episode,\r\n          status: character.status,\r\n          type: character.type,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default getDataFromApi;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"../stylesheet/App.css\";\nimport getDataFromApi from \"../services/getDataFromApi\";\n\nconst App = () => {\n  // usamos el hook useState para definir dos propiedades del estado del componente (cada uno de esos hooks actúa sobre la propiedad especificada por medio de la función que le hemos pasado en cada caso, recibiendo como argumento inicial de useState un array y un string vacío.\n  const [characters, setCharacters] = useState([]);\n  const [nameFilter, setNameFilter] = useState(\"\");\n\n  // Recojo los datos del API haciendo uso del ciclo de vida de los componentes para evitar llamadas innecesarias a la misma.\n  useEffect(() => {\n    // llamo al servicio\n    getDataFromApi().then((data) => {\n      setCharacters(data); // cuando responde el servidor guardamos los datos en el estado\n    });\n  }, []); // con este array vacío, le decimos a React que solo ejecute este useEffect una vez\n\n  return <div className=\"App\">Hola, mundo</div>;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheet/index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}